#+title: Comprehensive Demo: Math Emacs Configuration
#+AUTHOR: Demo Author
#+date: <2025-10-26 Sun>
#+filetags: Demo Mathematics Tutorial
#+options: toc:2 ':t

#+LATEX_HEADER: \usepackage{amsthm}
#+LATEX_HEADER: \newtheorem{theorem}{Theorem}[section]
#+LATEX_HEADER: \newtheorem{lemma}[theorem]{Lemma}
#+LATEX_HEADER: \newtheorem{corollary}[theorem]{Corollary}
#+LATEX_HEADER: \newtheorem{proposition}[theorem]{Proposition}
#+LATEX_HEADER: \newtheorem{definition}{Definition}[section]
#+LATEX_HEADER: \newtheorem{example}{Example}[section]
#+LATEX_HEADER: \newtheorem{remark}{Remark}[section]
#+LATEX_HEADER: \usepackage{amssymb}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{tikz}
#+LATEX_HEADER: \usepackage{csquotes}

* Introduction

This document demonstrates the full capabilities of the math-emacs configuration, showcasing:

- Custom yasnippet templates for theorem environments (=<f6> t=, =<f6> d=, etc.)
- Smart cross-referencing with =C-c r= using =cross-refs.el=
- CDLaTeX quick math insertion (=`o= → \(\omega\), =`O= → \(\Omega\), etc.)
- Math delimiters with =$= key binding
- Integration with =org-roam= for linked notes
- Bibliography management with =citar=
- Jupyter notebook integration
- LaTeX fragment previews with =org-fragtog=
- Export to LaTeX/PDF and Jupyter notebooks

** Configuration Highlights

This setup uses:
- =straight.el= for package management
- Literate configuration in =emacs-config.org=
- Modern completion with Vertico + Orderless + Consult + Embark
- =gptel= for AI assistance
- =magit= for version control

* Basic Mathematics with CDLaTeX

** Using CDLaTeX Symbols

CDLaTeX makes math input fast. Examples of customized bindings:

- Type =`m= to get \(\mu\), then =`m= again for \(\mapsto\)  
- Type =`o= for \(\omega\), =`O= for \(\Omega\) or \(\mathrm{Orb}\)
- Type =`S= for \(\Sigma\) or \(\mathrm{Stab}\)
- Type =`p= for \(\pi\), \(\varpi\), or \(\perp\)
- Type =`-= for \(\cap\), \(\leftrightarrow\), or \(\longleftrightarrow\)
- Type =`*= for \(\times\) or \(\otimes\)
- Type =`[= for \(\subseteq\)
- Type =`<= for \(\leq\), \(\langle\), or \(\trianglelefteq\)

** Inline Math with Math-Delimiters

Press =$= to insert math delimiters: \(E = mc^2\) inline, or press it twice for display math:

\[\int_{-\infty}^{\infty} e^{-x^2} dx = \sqrt{\pi}\]

The =$= binding works intelligently in both org-mode and LaTeX-mode. 

* Theorem Environments with Yasnippet

This configuration provides custom snippets bound to =<f6>= keys:

- =<f6> t= → Theorem
- =<f6> d= → Definition
- =<f6> l= → Lemma
- =<f6> c= → Corollary
- =<f6> p= → Proposition
- =<f6> f= → Proof
- =<f6> e= → Equation

Each snippet automatically:
1. Prompts for a unique label
2. Checks for duplicates using =my/org-snippet-get-unique-label=
3. Inserts the appropriate =#+label:= and =#+begin_...= / =#+end_...= blocks

** Example: Group Theory

#+name: def:group
#+label: def:group
#+begin_definition
A *group* is a set \(G\) together with a binary operation \(\cdot: G \times G \to G\) satisfying:
1. *Closure*: For all \(a, b \in G\), we have \(a \cdot b \in G\)
2. *Associativity*: \((a \cdot b) \cdot c = a \cdot (b \cdot c)\) for all \(a, b, c \in G\)
3. *Identity*: There exists \(e \in G\) such that \(e \cdot a = a \cdot e = a\) for all \(a \in G\)
4. *Inverses*: For each \(a \in G\), there exists \(a^{-1} \in G\) such that \(a \cdot a^{-1} = a^{-1} \cdot a = e\)
#+end_definition

#+name: thm:lagrange
#+label: thm:lagrange
#+begin_theorem
*(Lagrange's Theorem)* Let \(G\) be a finite group and \(H\) a subgroup of \(G\). Then the order of \(H\) divides the order of \(G\):
\[|G| = |H| \cdot [G:H]\]
where \([G:H]\) denotes the index of \(H\) in \(G\).
#+end_theorem

A test of displayed equations:
\[a+b\]

#+name: prf:lagrange
#+label: prf:lagrange
#+begin_proof
Consider the left cosets of \(H\) in \(G\). Each coset \(gH = \{gh : h \in H\}\) has exactly \(|H|\) elements. Moreover, the cosets partition \(G\) into disjoint sets. If there are \(k\) distinct cosets, then:
\[|G| = k \cdot |H| = [G:H] \cdot |H|\]
Thus \(|H|\) divides \(|G|\). \qed
#+end_proof

#+name: cor:prime-order
#+label: cor:prime-order
#+begin_corollary
If \(G\) is a group of prime order \(p\), then \(G\) is cyclic.
#+end_corollary

#+name: lem:subgroup-test
#+label: lem:subgroup-test
#+begin_lemma
A non-empty subset \(H\) of a group \(G\) is a subgroup if and only if \(ab^{-1} \in H\) for all \(a, b \in H\).
#+end_lemma

** Cross-Referencing with =C-c r=

The =cross-refs.el= library provides smart cross-referencing. To reference a theorem, type the context word and press =C-c r=:

- Type "theorem" then =C-c r= → prompts for labels starting with =thm:=
- Type "definition" then =C-c r= → prompts for =def:= labels
- Type "lemma" then =C-c r= → prompts for =lem:= labels
- Type "equation" then =C-c r= → prompts for =eq:= labels

Examples:
- By [[thm:lagrange]], every subgroup divides the order.
- See [[def:group]] for the group axioms.
- The proof is in [[prf:lagrange]].
- From [[cor:prime-order]], prime-order groups are cyclic.
- We can reference the theorem [[thm:cauchy-integral]].
  
* Advanced Mathematics

** Ring Theory

#+name: def:ring
#+label: def:ring
#+begin_definition
A *ring* is a set \(R\) equipped with two binary operations \(+\) (addition) and \(\cdot\) (multiplication) such that:
1. \((R, +)\) is an abelian group
2. Multiplication is associative
3. The distributive laws hold: \(a \cdot (b + c) = a \cdot b + a \cdot c\) and \((a + b) \cdot c = a \cdot c + b \cdot c\)
#+end_definition

#+name: thm:ideal-correspondence
#+label: thm:ideal-correspondence
#+begin_theorem
*(First Isomorphism Theorem)* Let \(\varphi: R \to S\) be a ring homomorphism. Then:
\[R / \ker(\varphi) \cong \mathrm{Im}(\varphi)\]
#+end_theorem

** Complex Analysis

#+name: def:holomorphic
#+label: def:holomorphic
#+begin_definition
A function \(f: U \to \mathbb{C}\) defined on an open set \(U \subseteq \mathbb{C}\) is *holomorphic* if it is complex differentiable at every point in \(U\).
#+end_definition

#+name: thm:cauchy-integral
#+label: thm:cauchy-integral
#+begin_theorem
*(Cauchy's Integral Formula)* Let \(f\) be holomorphic in a simply connected domain \(D\), and let \(\gamma\) be a simple closed contour in \(D\) oriented counterclockwise. For any \(a\) inside \(\gamma\):
#+end_theorem

#+name: eq:cauchy-formula
\begin{equation}
f(a) = \frac{1}{2\pi i} \oint_{\gamma} \frac{f(z)}{z - a} \, dz
\end{equation}

#+name: cor:liouville
#+label: cor:liouville
#+begin_corollary
*(Liouville's Theorem)* Every bounded entire function is constant.
#+end_corollary

** Graph Theory Example

#+name: def:graph
#+label: def:graph
#+begin_definition
A *graph* \(G = (V, E)\) consists of a set \(V\) of vertices and a set \(E \subseteq \binom{V}{2}\) of edges.
#+end_definition

#+name: thm:handshaking
#+label: thm:handshaking
#+begin_theorem
*(Handshaking Lemma)* In any graph \(G = (V, E)\):
#+end_theorem

#+name: eq:handshaking
\begin{equation}
\sum_{v \in V} \deg(v) = 2|E|
\end{equation}

* Equations and Alignment

** Single Equations

Use =<f6> e= to insert labeled equations:

#+name: eq:euler-identity
\begin{equation}
e^{i\pi} + 1 = 0
\end{equation}

The famous Equation [[eq:euler-identity]] connects five fundamental constants.

** Aligned Equations

#+name: eq:quadratic-derivation
\begin{align}
ax^2 + bx + c &= 0 \\
x^2 + \frac{b}{a}x + \frac{c}{a} &= 0 \\
x^2 + \frac{b}{a}x &= -\frac{c}{a} \\
x^2 + \frac{b}{a}x + \frac{b^2}{4a^2} &= \frac{b^2}{4a^2} - \frac{c}{a} \\
\left(x + \frac{b}{2a}\right)^2 &= \frac{b^2 - 4ac}{4a^2} \\
x &= \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}
\end{align}

** System of Equations

Consider the linear system:

#+name: eq:linear-system
\begin{equation}
\begin{cases}
  2x + 3y - z = 1 \\
  x - y + 2z = 4 \\
  3x + 2y + z = 5
\end{cases}
\end{equation}

* Integration with Org-Roam

This configuration uses =org-roam= for networked note-taking. Create links to other notes:

- Use =<f8> f= to find or create a roam note
- Use =<f8> i= to insert a link to a roam note
- Use =<f5> d= to search within all roam notes using =consult-ripgrep=

Example roam links (these are hypothetical):
- See my note on [[roam:Category Theory]] for functors and natural transformations
- The [[roam:Galois Theory]] note discusses field extensions
- My [[roam:Differential Geometry]] notes cover manifolds and tangent spaces

** Org-Roam Search

Use =<f5> d= (=bms/org-roam-rg-search=) to search across all notes in =my-notes-directory=.

* Bibliography and Citations

This configuration uses =citar= with =bibtex= for bibliography management.

** Citation Workflow

1. Press =<f7>= to open =citar-open= (search bibliography)
2. Press =<f5> b= to insert a citation with =citar-insert-bibtex=
3. In bibtex-mode, press =<f5> b= to use =bibretrieve= to fetch entries
4. Use =C-c C-c= in bibtex-mode to generate auto-keys (format: =year-author-title=)

** Example Citations

Important results in graph theory can be found in standard references. The chromatic polynomial was introduced by Birkhoff, and Tutte's work on matroids extended these ideas significantly.

Integration with =citar-org-roam= allows literature notes to be created automatically with the "r" template.

* Python and Jupyter Integration

** Basic Python Source Block

Use the =src-python= snippet or type =<j= for jupyter-python blocks:

#+begin_src python :results output
import numpy as np
import matplotlib.pyplot as plt

# Generate data
x = np.linspace(0, 2*np.pi, 100)
y = np.sin(x)

# Simple calculation
print(f"Maximum value of sin(x): {np.max(y)}")
print(f"Minimum value of sin(x): {np.min(y)}")
#+end_src

** Jupyter Integration

The configuration includes =emacs-jupyter= for interactive computing. Note the workaround for the login error and the manual =zmq= compilation requirement.

#+begin_src jupyter-python
import numpy as np
import sympy as sp

# Symbolic mathematics with SymPy
x, y = sp.symbols('x y')
expr = sp.sin(x)**2 + sp.cos(x)**2
simplified = sp.simplify(expr)
print(f"Simplified: {simplified}")

# Calculus
f = sp.sin(x) * sp.exp(x)
derivative = sp.diff(f, x)
integral = sp.integrate(f, x)
print(f"f(x) = {f}")
print(f"f'(x) = {derivative}")
print(f"Integral of f(x)dx = {integral}")
#+end_src

** Data Visualization

#+begin_src python :results file
import matplotlib.pyplot as plt
import numpy as np

# Create figure
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 4))

# Plot 1: Trigonometric functions
x = np.linspace(0, 4*np.pi, 200)
ax1.plot(x, np.sin(x), label='sin(x)', linewidth=2)
ax1.plot(x, np.cos(x), label='cos(x)', linewidth=2)
ax1.set_xlabel('x')
ax1.set_ylabel('y')
ax1.set_title('Trigonometric Functions')
ax1.legend()
ax1.grid(True, alpha=0.3)

# Plot 2: Polynomial
x2 = np.linspace(-2, 2, 100)
ax2.plot(x2, x2**3 - 3*x2**2 + 2*x2 + 1, linewidth=2, color='red')
ax2.set_xlabel('x')
ax2.set_ylabel('y')
ax2.set_title('Cubic Polynomial')
ax2.grid(True, alpha=0.3)
ax2.axhline(y=0, color='k', linewidth=0.5)
ax2.axvline(x=0, color='k', linewidth=0.5)

plt.tight_layout()
plt.savefig('sample2_plot.png', dpi=100, bbox_inches='tight')
return 'sample2_plot.png'
#+end_src

* Tables and Data

Org-mode tables are powerful for organizing data:

| Theorem         | Section | Reference                | Key Result                        |
|-----------------+---------+--------------------------+-----------------------------------|
| Lagrange        |     2.1 | [[thm:lagrange]]             | Subgroup order divides            |
| Cauchy Integral |     3.2 | [[thm:cauchy-integral]]      | Holomorphic function value        |
| Handshaking     |     3.3 | [[thm:handshaking]]          | Sum of degrees = 2\vert{}E\vert{} |
| First Iso. Thm. |     3.1 | [[thm:ideal-correspondence]] | Kernel and image                  |

Use =C-c |= to create tables, and the table will auto-format as you type.

** Calculations in Tables

Org tables support formulas:

| \(n\) | \(n^2\) | \(n^3\) | \(2^n\) |
|-------+---------+---------+---------|
|     1 |       1 |       1 |       2 |
|     2 |       4 |       8 |       4 |
|     3 |       9 |      27 |       8 |
|     4 |      16 |      64 |      16 |
|     5 |      25 |     125 |      32 |
|     6 |         |         |         |

* Export Options

** LaTeX/PDF Export

This document can be exported to LaTeX/PDF with =C-c C-e l p=:
- Custom =#+LATEX_HEADER= declarations define theorem environments
- All =#+begin_theorem= blocks export correctly
- Cross-references work in the PDF output
- Math fragments render beautifully

** Jupyter Notebook Export

With =ox-ipynb=, export to =.ipynb= format:
- Use =C-c C-e= and select the ipynb export option
- Python and Jupyter source blocks become notebook cells
- Markdown sections become markdown cells

* Advanced Features Showcase

** Embark Actions

With =embark= (bound to =C-==):
- In file completion, press =C-== then =L= to insert an org link
- Use embark on citar results to open PDFs, bibtex entries, or notes
- Combine with =consult= for powerful navigation

** Consult Commands

- =<f5> l= → =consult-line= for searching current buffer
- =<f5> r= → =consult-ripgrep= for project-wide search
- =<f5> d= → =bms/org-roam-rg-search= for org-roam specific search

** Smartparens

The =smartparens= configuration handles paired delimiters:
- In org-mode, =|= is paired for absolute values: \(|x|\)
- In org-mode, ===  is paired for verbatim text: =code=
- Works with all bracket types: \(\{x \in \mathbb{R} : x > 0\}\)

** Org-Fragtog

LaTeX fragments preview automatically as you move the cursor:
- Fragments render when cursor leaves them
- Inline math like \(\sum_{i=1}^{n} i = \frac{n(n+1)}{2}\) appears immediately
- Display math previews in place

* GTD and Task Management

The configuration includes a GTD (Getting Things Done) setup with Org Capture:

** Capture Templates

- =C-c c i= → Capture to Inbox (TODO item)
- =C-c c w= → Capture web content with org-protocol

** Example Tasks

*** TODO Review Lagrange's Theorem proof
SCHEDULED: <2025-10-27 Mon>
- Need to verify the coset partition argument
- Check [[thm:lagrange]] for reference

*** DONE Write comprehensive demo file
CLOSED: [2025-10-26 Sun 14:30]
- Created sample2.org with extensive examples

** Org Agenda

Use =C-c a= to open the agenda view, which shows:
- Scheduled tasks
- Deadlines
- Habit tracking (via =org-habit=)
- Custom agenda views

* AI Integration with GPTel

The configuration includes =gptel= for AI assistance:
- Press =C-c g= to open GPTel
- Ask questions about mathematics, LaTeX, or Emacs
- Get help with proof strategies or problem-solving
- API key is stored in =personal.org=

** Example AI Queries

Use GPTel to:
- "Explain the intuition behind Lagrange's theorem"
- "Generate LaTeX code for a commutative diagram"
- "Suggest a proof strategy for showing a function is continuous"
- "Debug my Emacs Lisp function"

* Magit Integration

Version control with =magit= (=C-c m=):
- Stage changes with =s=
- Commit with =c c=
- Use =gptel-magit= for AI-generated commit messages
- Push/pull with =P= / =F=

* PDF Tools and Org-Noter

** Reading PDFs

With =pdf-tools=:
- Open PDFs in Emacs with native rendering
- Annotate directly in the PDF
- Sync with org-noter notes

** Org-Noter Workflow

1. Open a PDF in pdf-tools
2. Press =<f5> n= to start =org-noter=
3. Take notes that sync with PDF page numbers
4. Notes are stored in =my-notes-directory=

* Useful Keybinding Reference

** Global Bindings

| Key        | Command        | Purpose         |
|------------+----------------+-----------------|
| =C-c a=      | =org-agenda=     | Open agenda     |
| =C-c c=      | =org-capture=    | Capture item    |
| =C-c m=      | =magit-status=   | Git interface   |
| =C-c g=      | =gptel=          | AI assistant    |
| =C-==        | =embark-act=     | Context actions |
| =f2 f2=      | =indent-line=    | Fix indentation |
| =f2 r=       | =recentf=        | Recent files    |
| =super down= | =duplicate-line= | Copy line down  |

** Org-Mode Specific

| Key    | Command                 | Purpose                |
|--------+-------------------------+------------------------|
| =C-c r=  | =my/org-insert-smart-ref= | Smart cross-reference  |
| =$=      | =math-delimiters-insert=  | Insert math delimiters |
| =<f6> t= | thm snippet             | Insert theorem         |
| =<f6> d= | def snippet             | Insert definition      |
| =<f6> l= | lem snippet             | Insert lemma           |
| =<f6> c= | cor snippet             | Insert corollary       |
| =<f6> p= | pro snippet             | Insert proposition     |
| =<f6> e= | equ snippet             | Insert equation        |
| =<f6> f= | pf snippet              | Insert proof           |
| =<f8> f= | =org-roam-node-find=      | Find/create roam note  |
| =<f8> i= | =org-roam-node-insert=    | Insert roam link       |
| =<f5> d= | =bms/org-roam-rg-search=  | Search roam notes      |
| =<f5> l= | =consult-line=            | Search buffer          |
| =<f5> r= | =consult-ripgrep=         | Search project         |

** Bibliography

| Key    | Command             | Purpose         |
|--------+---------------------+-----------------|
| =<f7>=   | =citar-open=          | Open citation   |
| =<f5> b= | =citar-insert-bibtex= | Insert citation |
| =<f5> n= | =org-noter=           | PDF annotation  |

* Conclusion

This document showcases the major features of the math-emacs configuration:

1.  Theorem environments with yasnippet (=<f6>= keys)
2.  Smart cross-referencing (=C-c r=)
3.  CDLaTeX for fast math input
4.  Math delimiters with =$=
5.  Org-roam for networked notes (=<f8>= keys)
6.  Bibliography with citar (=<f7>=, =<f5> b=)
7.  Jupyter/Python integration
8.  Modern completion (Vertico/Consult/Embark)
9.  GPTel AI assistance (=C-c g=)
10.  Magit version control (=C-c m=)
11.  PDF tools and org-noter
12.  Export to LaTeX/PDF and Jupyter notebooks

** Next Steps

To explore further:
- Read =emacs-config.org= for full configuration details
- Check =lisp/cross-refs.el= for cross-reference implementation
- Explore snippets in =snippets/org-mode/= directory
- Review =README.org= for setup instructions
- Add =personal.org= for private settings (API keys, paths)

** Testing This Configuration

To test without affecting your current setup:

#+begin_src bash
emacs -Q --eval '(setq user-emacs-directory "/path/to/math-emacs/")' \
     -l "/path/to/math-emacs/init.el" sample2.org
#+end_src 

